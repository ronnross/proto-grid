$grid-start: 1;
$grid-end: 12;
/************** Mixins *************/
@mixin breakpoint($point) {
  @if $point == tablet {
    @media (min-width: 50rem) {
      @content;
    }
  } @else if $point == desktop {
    @media (min-width: 70rem) {
      @content;
    }
  }
}

/* 
 creates a .ms-col-1 { -ms-grid-column: 1 }
 from 1 to 12
*/
@for $i from $grid-start through $grid-end {
  .ms-col-#{$i} {
    -ms-grid-column: #{$i};
  }
}

@for $i from 1 through 20 {
  .ms-row-#{$i} {
    -ms-grid-row: #{$i};
  }
}

/* sizes */
/* Mobile */
.span-0 {
  display: none;
}
/* 
 creates a .span-12 { grid-column: span 12 }
 from 1 to 12
*/
@for $i from $grid-start through $grid-end {
  .span-#{$i} {
    -ms-grid-column-span: #{$i};
    grid-column: span #{$i};
    display: initial;
  }
}

/* 
 creates a row-span-2 { grid-row: span 2 }
 from 1 to 12
*/
@for $i from $grid-start through $grid-end {
  .row-span-#{$i} {
    -ms-grid-column-span: #{$i};
    grid-row: span #{$i};
  }
}

.gap-1 {
  grid-column-gap: 15px;
}

.gap-2 {
  grid-column-gap: 20px;
}

.row-span-0 {
  display: none;
}

/* Tablet */
@include breakpoint(tablet) {
  .span-0-md {
    display: none;
  }
  /*
  Creates a .span-2-md { grid-column: span 2 }
  from 1 to 12
  */
  @for $i from $grid-start through $grid-end {
    .span-#{$i}-md {
      -ms-grid-column-span: #{$i};
      grid-column: span #{$i};
      display: initial;
    }
  }
}

/* Desktop */
@include breakpoint(desktop) {
  .span-0-lg {
    display: none;
  }
  /*
  Creates a .span-2-lg { grid-column: span 2 }
  from 1 to 12
  */
  @for $i from $grid-start through $grid-end {
    .span-#{$i}-lg {
      -ms-grid-column-span: #{$i};
      grid-column: span #{$i};
      display: initial;
    }
  }
}

.grid {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-columns: repeat(12, 1fr);
}

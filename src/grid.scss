$grid-begin-range: 1;
$grid-end-range: 12;
$sizes: (small: "", medium: "-md", large: "-lg");

/************** Mixins *************/
@mixin breakpoint($point) {
  @if $point == small {
    @content;
  } @else if $point == medium {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $point == large {
    @media (min-width: 992px) {
      @content;
    }
  }
}

@each $key, $val in $sizes {
  @include breakpoint($key) {
    .span-0 {
      display: none;
    }

    .row-span-0 {
      display: none;
    }

    @for $i from $grid-begin-range through $grid-end-range {
      /* creates a .span-n from 1 to 12 */
      .span-#{$i}#{$val} {
        -ms-grid-column-span: #{$i};
        grid-column-end: span #{$i};
        display: initial;
      }

      /* creates a .start-n from 1 to 12 */
      .start-#{$i}#{$val} {
        -ms-grid-column: #{$i};
        grid-column-start: #{$i};
      }

      /* creates a row-span-n from 1 to 12 */
      .row-span-#{$i}#{$val} {
        -ms-grid-row-span: #{$i};
        grid-row: span #{$i};
      }
    }

    @supports (display: grid) {
      /* creates a gap-n, gap-col-n, and gap-row-n from 5 to 25 in multiples of 5 */
      @for $i from 1 through 5 {
        .gap-#{$i}#{$val} {
          grid-gap: #{$i * 5}px;
        }
        .gap-col-#{$i}#{$val} {
          grid-column-gap: #{$i * 5}px;
        }

        .gap-row-#{$i}#{$val} {
          grid-row-gap: #{$i * 5}px;
        }
      }
    }
  }

  /*/////////////// Things put in here are IE only ///////////////////*/
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    /* creates a margin from 5 to 25 in multiples of 5 */
    @for $i from 1 through 5 {
      .gap-#{$i}#{$val} {
        margin-right: -#{$i * 5}px;
        margin-bottom: -#{$i * 5}px;
      }

      .gap-#{$i}#{$val} > * {
        margin-right: #{$i * 5}px;
        margin-bottom: #{$i * 5}px;
      }
    }
  }

  /* .ms-row-n from 1 to 20 */
  // just do thru 12
  // move up in main loop
  @for $i from 1 through 20 {
    .ms-row-#{$i}#{$val} {
      -ms-grid-row: #{$i};
    }
  }
}

.grid {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-columns: repeat(12, 1fr);
}
